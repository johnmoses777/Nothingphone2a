import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

function Model(props) {
  const { nodes, materials } = useGLTF('/models/scene2.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[0, -0.08, 0]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.back_details.geometry}
          material={materials.back_details}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.back_details_filledRings.geometry}
          material={materials['back_cover_thickness.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.back_details_glass.geometry}
          material={materials.glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.back_inside.geometry}
          material={materials.back_inside}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.backCover.geometry}
          material={materials.back_cover}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.backCover_camera.geometry}
          material={materials.back_cover_thickness}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.camera_front.geometry}
          material={materials.cameras}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.camera_front_glass.geometry}
          material={materials.cameras_lense}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.frame_plastic.geometry}
          material={materials.frame}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.frame_plastic_border.geometry}
          material={materials.frame_border}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.frontScreen.geometry}
          material={materials.glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.glass_cover.geometry}
          material={materials.glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lens_edge.geometry}
          material={materials.lens_edge}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lens_edge_cover.geometry}
          material={materials.lens_edge_cover}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lense_house.geometry}
          material={materials.lens_edge}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lense_house_edge.geometry}
          material={materials.lens_edge_cover}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lense_inner.geometry}
          material={materials.cameras}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lenses.geometry}
          material={materials.cameras_lense}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.on_off_switch.geometry}
          material={materials.switches}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.screen.geometry}
          material={materials.screen}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sim_tray.geometry}
          material={materials.frame}
        />
        <mesh castShadow receiveShadow geometry={nodes.usb_c.geometry} material={materials.usbc} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.volume_down.geometry}
          material={materials.switches}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.volume_up.geometry}
          material={materials.switches}
        />
      </group>
    </group>
  )
}
export default Model;
useGLTF.preload('/models/scene2.glb')
